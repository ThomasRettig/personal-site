:root {
    --heading-font: 'InterDisplay', system-ui, sans-serif;
    --body-font: 'Inter', system-ui, sans-serif;
}

/*
if the browser support variable fonts
serve the variable version of Inter instead via the @supports query
https://css-tricks.com/how-supports-works/
*/
@supports (font-variation-settings: normal) {
    :root {
        --heading-font: 'InterDisplay var', system-ui, sans-serif;
        --body-font: 'Inter var', system-ui, sans-serif;
    }
}

/*
set some CSS properties to be used by our Paint API later
note that browser support is not very good as of Decemeber 2021
but we aren’t using this to serve essential content
https://css-tricks.com/creating-generative-patterns-with-the-css-paint-api/
*/
@property --pattern-seed {
    syntax: "<number>";
    initial-value: 1000;
    inherits: true;
}

@property --pattern-colors {
    syntax: "<color>#";
    initial-value: #0193c1, #74d8e6, #0bc0e0, #3ddaf5, #e2f9fe, #02313f;
    inherits: true;
}

@property --pattern-speck-count {
    syntax: "<number>";
    initial-value: 350;
    inherits: true;
}

@property --pattern-speck-min-size {
    syntax: "<number>";
    initial-value: 0;
    inherits: true;
}

@property --pattern-speck-max-size {
    syntax: "<number>";
    initial-value: 4;
    inherits: true;
}

/*
apply a generic focus style
stolen from Discord’s web app
*/

:focus {
    border-color: #0060df;
    box-shadow: 0 0 0 2px rgb(0 144 237/.5);
    outline: 0;
    border-radius: 2px;
}

body {
    -webkit-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    overflow-y: hidden;
    margin: 5vw;
    user-select: none;
    background-image: paint(tinySpecksPattern);
    
    /* set the background via the Paint API */
}

h1 {
    font-family: var(--heading-font);
    font-variation-settings: "wght" 750;
    margin: 0;
    /* normalize.css suggests resetting margin to zero */
}

p {
    font-family: var(--body-font);
    font-feature-settings: "cv06";
}

a {
    color: inherit;
    text-decoration: none;
}

img {
    vertical-align: middle;
    /* this makes the icon visually aligned to the accompanying text */
    margin-right: 7px;
    user-select: none;
    /* prevent the “kissing” of the icon and text
    TODO: find out if there is a better way to solve this with flexbox
    */
}

#square {
    background-color: #ffffff9e;
    border-radius: 12px;
    aspect-ratio: 4 / 3;
    height: 150px;
    padding: 20px;
    backdrop-filter: blur(5px) saturate(1.5);
    box-shadow: 0 0 20px 0px #83838314;
}

@media screen and (min-width: 550px) {
	div {
		position: relative;
	}
}
